PARSER_BEGIN(SyntaxChecker)

public class SyntaxChecker {
  /** Main entry point. */
  public static void main(String args[]) throws ParseException {
    SyntaxChecker parser = new SyntaxChecker(System.in);
    parser.Input();
  }
}

PARSER_END(SyntaxChecker)

SKIP:  { " " | "\t" | "\n" | "\r"  | "\\"  }
TOKEN: {
  < INC_V:	"+" >
| < DEC_V:	"-" >
| < INC_P:	"<" >
| < DEC_P:	">" >
| < OUT:	"." >
| < INP:	"," >
| < LOOP_B:	"[" >
| < LOOP_E:	"]" >

}

/** Root production. */
void Input() :
{ int count; }
{
  count=MatchedBraces() <EOF>
  { System.out.println("The levels of nesting is " + count); }
}

/** Brace counting production. */
int MatchedBraces() :
{ int nested_count=0; }
{
  <LOOP_B>[ nested_count=MatchedBraces() ] <LOOP_E>
  { return ++nested_count; }
}